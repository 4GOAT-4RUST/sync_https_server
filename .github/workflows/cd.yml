name: CD
on: 
  push:
    branches: 
      - dev
      - main

jobs:
  build_and_test:
    name: Rust project - latest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry and build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git/db/
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry 
        uses: docker/login-action@v3
        with:  
          registry: ghcr.io 
          username: ${{ github.actor }}  
          password: ${{ secrets.TOKEN }}  

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: | 
            ghcr.io/${{ secrets.REPOSITORY }}/sync_https_server:sha-${{ github.sha }}
            ghcr.io/${{ secrets.REPOSITORY }}/sync_https_server:branch-${{ github.ref_name }}
            ghcr.io/${{ secrets.REPOSITORY }}/sync_https_server:latest
          platforms: linux/amd64,linux/arm64  

      - name: Pull latest Docker image before slimming
        run: docker pull ghcr.io/${{ secrets.REPOSITORY }}/sync_https_server:latest

      - name: Slim Docker image
        uses: kitabisa/docker-slim-action@v1
        env:
          DSLIM_HTTP_PROBE: "false"  
        with:
          target: ghcr.io/${{ secrets.REPOSITORY }}/sync_https_server:latest  
          tag: slim  

      - name: Push slimmed Docker image
        run: docker push ghcr.io/${{ secrets.REPOSITORY }}/sync_https_server:slim

