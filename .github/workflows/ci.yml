name: Rust CI

on:
  push:
    branches:
      - main  # Trigger the workflow when pushing to the main branch
      - dev   # Trigger the workflow when pushing to the dev branch
      - "**"
  pull_request:
    branches:
      - main  # Trigger on pull requests targeting the main branch
      - dev   # Trigger on pull requests targeting the dev branch
    path:
      - '**/Cargo.toml'
      - '**/Cargo.lock'
permissions:
  contents: write  # Grants permission to modify repository contents

jobs:
  checking-repo:
    runs-on: ubuntu-latest  # Specifies the runner environment
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4  # Checks out the repository code

      - name: Checkout Repository
        uses: actions/checkout@v4  # Ensures repository is available
      - name: Caching Dependencies
        uses: actions/cache@v4  # Caches dependencies to speed up builds
        with:
          path: |
            ~/.cargo/registry/
            ~/.cargo/.git/db/
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@master  # Updated action for Rust toolchain
        with:
          toolchain: stable
          override: true
      - name: Running Cargo Checks
        run: |
          cargo install cargo-check  # Installs cargo-check for linting
          cargo check --verbose  # Checks the code for errors
          cargo test --verbose  # Runs tests

      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@master  # Updated action for Rust toolchain
        with:
          toolchain: stable
      - name: Install Clippy & Format
        run: rustup component add clippy rustfmt  # Adds Clippy and Rustfmt
      - name: Run cargo fmt
        run: cargo fmt -- --check  # Checks if the code is properly formatted
      - name: Run cargo clippy
        run: cargo clippy -- -D warnings  # Runs Clippy and treats warnings as errors

      - name: Run cargo-audit
        uses: actions/checkout@v1
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}